# Form implementation generated from reading ui file 'authenticationDialog.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import json
from PyQt6.QtWidgets import QMessageBox, QDialog
from modules import SLMISHandler
import sys

class Ui_Dialog(QDialog):
    def __init__(self):
        super().__init__()
        self.setup()
    
    def setup(self):
        self.setWindowTitle("SLMIS Authentication")
        self.resize(257, 193)
        self.setMaximumSize(QtCore.QSize(600, 600))
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.slmisLabel = QtWidgets.QLabel()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.slmisLabel.sizePolicy().hasHeightForWidth())
        self.slmisLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.slmisLabel.setFont(font)
        self.slmisLabel.setObjectName("slmisLabel")
        self.verticalLayout.addWidget(self.slmisLabel)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.usernameLabel = QtWidgets.QLabel()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.usernameLabel.sizePolicy().hasHeightForWidth())
        self.usernameLabel.setSizePolicy(sizePolicy)
        self.usernameLabel.setObjectName("usernameLabel")
        self.verticalLayout.addWidget(self.usernameLabel)
        self.usernameInput = QtWidgets.QLineEdit()
        self.usernameInput.setObjectName("usernameInput")
        self.verticalLayout.addWidget(self.usernameInput)
        self.passwordLabel = QtWidgets.QLabel()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.passwordLabel.sizePolicy().hasHeightForWidth())
        self.passwordLabel.setSizePolicy(sizePolicy)
        self.passwordLabel.setObjectName("passwordLabel")
        self.verticalLayout.addWidget(self.passwordLabel)
        self.passwordInput = QtWidgets.QLineEdit()
        self.passwordInput.setObjectName("passwordInput")
        self.verticalLayout.addWidget(self.passwordInput)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem1)
        self.pushButton = QtWidgets.QPushButton()
        self.pushButton.clicked.connect(self.login)
        self.pushButton.setObjectName("pushButton")
        
        self.verticalLayout.addWidget(self.pushButton)
        self.ercLabel = QtWidgets.QLabel()
        self.ercLabel.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.ercLabel.setObjectName("ercLabel")
        self.verticalLayout.addWidget(self.ercLabel)

        self.setLayout(self.verticalLayout)

        self.slmisLabel.setText("SLMIS AUTHENTICATION")
        self.usernameLabel.setText( "Username:")
        self.passwordLabel.setText( "Password:")
        self.pushButton.setText("Login Now")
        self.ercLabel.setText("Developed by: XU-ERC (2024)")
    

    def login(self):
        print("Login Clicked")
        user_name = self.usernameInput.text()
        password = self.passwordInput.text()

        handler = SLMISHandler()

        if handler.authentication(user_name, password):
            with open('auth_success.json', 'w') as f:
                json.dump({'user_name': user_name, 'password': password}, f)  
        else:
            button = QMessageBox.critical(QtWidgets.QWidget(),
                         "Authentication Error",
                         "Wrong Username or Password. Do you want to continue?",
                         buttons=QMessageBox.StandardButton.Yes
                         | QMessageBox.StandardButton.No)
            
            if button == QMessageBox.StandardButton.Yes:
                handler.close()
                self.usernameInput.clear()
                self.passwordInput.clear()
            elif button == QMessageBox.StandardButton.No:
                handler.close()

            return False
        
        self.accept()
        print("Application Closed")
        handler.close()
        print("Selenium Closed")

